
%LET sacre=(chemin du répertoir où sont entreposées les données brutes (au format xls);
%LET destination=(chemin du répertoir où l'on souhgaite entreposer les sorties (graphiques tableaux...));
%LET bibli=(chemin du répertoir où est entreposée la base de données nommée "donnees");

libname sacre "&sacre";
libname bibli "&bibli";
libname res "&destination"; 

OPTIONS nonotes nosource nosource2 errors=0 ;




%macro chargeur_0;

PROC DATASETS library=bibli kill;
RUN;
QUIT;


/*je modifie le format de la date de la base_t*/
DATA bibli.base_t;
SET sacre.base_t;
date2=input(date,yyq6.);
DROP date ;
RENAME date2=date;
RUN;

/*j'effectue un certain nombre de traitements sur la base_t (calcul du taux de croissance, ajout d'un retard, ajout d'une constante)*/
DATA bibli.base_t ;
SET bibli.base_t ;
taux=dif(log(pib));
RUN;

DATA bibli.base_t ;
SET bibli.base_t ;
ret1=lag(taux);
RUN;

DATA bibli.base_t ;
SET bibli.base_t ;
cst=1;
RUN;



/*je fusionne l'ensemble des données dans une table unique appelée donnees*/

DATA bibli.donnees ;
MERGE sacre.base_j_2 sacre.base_j ;
BY date;
RUN;

DATA bibli.donnees ;
MERGE bibli.donnees sacre.base_j_3 ;
BY date;
RUN;

DATA bibli.donnees ;
MERGE bibli.donnees sacre.base_j_4 ;
BY date;
RUN;

DATA bibli.donnees ;
MERGE bibli.donnees sacre.base_m ;
BY date;
RUN;

DATA bibli.donnees ;
MERGE bibli.donnees bibli.base_t ;
BY date;
RUN;

%mend;



%macro chargeur_1;
/*macro qui se contente de charger les données situées dans bibli dans le répertoir work. */

PROC DATASETS library=work kill;
RUN;
QUIT;

/*je charge les regresseurs dans la base donnees*/
DATA donnees;
SET bibli.donnees;
RUN;

/*je charge le regressand dans la base table*/
DATA table;
SET bibli.donnees;
KEEP date taux ret1 cst ;
IF taux=. THEN DELETE ;
RUN;


%mend;

%macro base_reg(var,a,for);

/*macro fondamentale pour le reste du code.
/*cette macro prépare les données en vue de la régression MIDAS. 
/*en entrée il faut lui fournir une variable (var) 
/*en sortie la macro fournit un tableau avec "a" colonnes.
/*chaque ligne correspond alors à un trimestre.
les valeurs successives présentes sur une ligne correspondent, de la gauche vers la droite, à la valeur de la variable pour le dernier jour, puis l'avant dernier jour... jusqu'au a-ème jour du trimestre en questio
La ième colonne correspond alors au ième jour de chaque trimestre

/*var : nom de la variable choisie
/*a nombre de jours (ou de mois pour les variables mensuelles) choisis pour la regression MIDAS
/*for : nombre de mois séparant la fin de la période d'estimation de la fin du trimestre.
for = 1 signifie qu'on prévoit le mois 3 à la fin du mois 2.

/*Je crée un masque de base destiné à accueillir la base finale, traitée*/
DATA &var.freq;
    DELETE ;
run;


%DO annee=1990 %TO 2013;
%PUT année &annee ;
%DO trimestre =1 %TO 4;
%PUT trimestre &trimestre;

/*je crée une base correspondant à un trimestre particulier, qui regroupe les observations antérieures à la fin du trimestre 
/*c'est à dire les observations dont la date est strictement inférieure au premier jour du mois suivant */
/*ou au premier janvier de l'année suivante, si jamais &trimestre*3-&for+1 =13 ;*/

/*dans le cas suivant, il n'y a rien à modifier : l'année reste telle quelle et le mois aussi*/
%IF 1<=%EVAL(&trimestre*3-&for+1)<=12 %THEN %LET delta=0;
%IF 1<=%EVAL(&trimestre*3-&for+1)<=12 %THEN %LET mois=%EVAL(&trimestre*3-&for+1);

/*Si on se trouve en fin d'année(par exemle dans le cas où l'horizon for vaut 0, les valeurs du 4èm trimestre sont celles dont les dates sont antérieures au 01/01 de l'année n+1*/
%IF %EVAL(&trimestre*3-&for+1)>12 %THEN %LET delta=1 ;
%IF %EVAL(&trimestre*3-&for+1)>12 %THEN %LET mois=1;

/*Si jamais l'horizon de prévision est important (on se place plus de trois mois à l'avance pour prévoir), 
dans ce cas, en fonction de la valeur du trimestre dans le quel on se trouve, il faut se placer ou non un an à l'avance
et la valeur du mois qui sert de date butoir doit être décalée, modulo 12*/
%IF %EVAL(&trimestre*3-&for+1)<1 %THEN %LET delta=-1;
%IF %EVAL(&trimestre*3-&for+1)<1 %THEN %LET mois=%EVAL(12+&trimestre*3-&for+1);


DATA &var.&trimestre ;
SET &var ;
WHERE date<mdy(&mois,1,&annee+&delta);
RUN;

/*J'inverse l'ordre de la table pour deux raisons : 
- ça permet de pouvoir sélectionner les &a premières lignes, qui correspondent désormais au &a valeurs les plus récentes
- lorsque je transposerai cette sous-table la colonne la plus à gauche correspondra à la valeur la plus récente*/

PROC SORT DATA=&var.&trimestre;
BY DESCENDING date  ;
RUN;


/*je récupère la date de la première ligne de la table &var.&trimestre qui correspondra à la date de la première valeur de chaque ligne du futur tableau*/
DATA date ;
SET &var.&trimestre (obs=1);
KEEP date ;
RUN;

/*j'ajoute la date qui correspond à la valeur du pib que cette ligne doit prévoir*/
/*la différence entre date et date_2 est celle de l'horizon de prévision*/
DATA date;
SET date;
date_2=yyq(&annee,&trimestre);
RUN;


/*je sélectionne le nombre de valeurs voulues (&a) dans la table &var.&trimestre*/
DATA &var.&trimestre ;
SET &var.&trimestre (obs=%EVAL(&a)) ;
RUN;

/*je me débarasse du vecteur de dates*/
DATA &var.&trimestre ;
SET &var.&trimestre ;
DROP date ;
RUN;

%transpose(&var.&trimestre) ;

/*j'adjoins à la ligne contenue dans &var.&trimestre la date de la valeur la plus récente*/
DATA &var.&trimestre ;
MERGE date &var.&trimestre ;
RUN;



DATA &var.freq ;
SET &var.freq  &var.&trimestre;
RUN;
%END;

%END ;

*renomme les colonnes ;
DATA &var.freq ;
SET &var.freq ;
%DO i=1 %TO &a ;
RENAME col&i=&var.&i ;
%END;
RENAME date=date_obs ;
RENAME date_2=date ;
RUN;

DATA &var.freq ;
SET &var.freq ;
IF &var.&a=. THEN DELETE ;
IF date=. THEN DELETE ;
RUN;

%mend ;




%macro mat(n,p)  ;

/*Macro qui permet de créer une matrice avec n lignes et p colonnes, dont la ième ligne est constituée des puissances successives de i.
n doit être égal au nombre de retards de la variable à regrésser.
p est le nombre de paramètres almons que je souhaite estimer*/
data matrice;
v0=0;
RUN;


DATA matrice;
SET matrice;
DROP i;
    ARRAY vecteur v0-v%EVAL(&n-1);
    DO i = 1 TO DIM(vecteur);
        vecteur(i)=i-1;
    END;
RUN;


PROC TRANSPOSE data=matrice out=matrice;

DATA matrice;
SET matrice;
DROP _NAME_ ;
col0=1;
RUN;



%DO j = 2 %TO &p ;
DATA matrice;
SET matrice;
col&j=col%EVAL(&j-1)*col1;
RUN;
%END;



/*je réordonne la table dans l'ordre croissant des variables*/
data matrice;
attrib col0-col&p informat=2.;
set matrice;
run;



%mend;









%macro produit_matriciel(A,B) ;
/*macro qui permet de faire un produit matriciel
J'utilise pour cela du code SAS IML*/
 PROC IML ;
 RESET PRINT;
 USE &A ;
 READ ALL INTO &A ;
 USE &B ;
READ ALL INTO &B ;
produit=&A*&B ;
CREATE produit FROM produit ;
APPEND from produit ;
 QUIT ;
 %mend;

%macro transpose(vecteur);
/*je transpose ces coefficents*/
PROC IML ;
 RESET PRINT;
 USE &vecteur ;
 READ ALL INTO &vecteur ;

prov=&vecteur` ;
CREATE prov FROM prov ;
APPEND from prov ;
 QUIT ;

/*les données en colonnes sont contenues dans la table appelée parametres2
 je la renomme parametres*/
DATA &vecteur;
SET prov;
RUN;
%mend;



%macro inverse(matrice);
/*je transpose ces coefficents*/
PROC IML ;
 RESET PRINT;
 USE &matrice ;
 READ ALL INTO &matrice ;

prov=INV(&matrice) ;
CREATE prov FROM prov ;
APPEND from prov ;
 QUIT ;

/*les données en colonnes sont contenues dans la table appelée parametres2
 je la renomme parametres*/
DATA &matrice;
SET prov;
RUN;
%mend;



%macro test_cusum;
/*Macro qui permet de récupérer et de traiter les résidus d'une estimation MIDAS en vue de calculer le test CUSUM*/
/*Le calcul effectif du test CUSUM se fait grâce à la macro test_cusum_2*/


/*je compte le nombre de lignes présentes dans la base sur laquelle je regresse*/


PROC SQL ;
select count(*) into :nb_lignes from table;
QUIT;

/*je compte le nombre de lignes dans fit, de façon à pouvoir en sélectioner la dernère ligne*/
PROC SQL ;
select count(*) into :nb_fit from fit;
QUIT;


DATA residus;
SET fit (firstobs=&nb_fit obs=&nb_fit);
KEEP yresid;
RUN;

DATA table_norm ;
SET table;
DROP date date_obs taux ret1;
IF &var_1.1=. THEN DELETE ;
RUN;

DATA table_norm_2 ;
SET table (firstobs=&nb_lignes);
DROP date date_obs taux ret1;
RUN;


/*opérations algébriques pour calculer le édominateur des résidus récursifs (cf brown durbin evas 1975 page2)*/
 PROC IML ;
 RESET PRINT;
 USE table_norm ;
 READ ALL INTO table_norm ;
 USE table_norm_2 ;
READ ALL INTO table_norm_2 ;
 USE residus ;
READ ALL INTO residus ;

denom=sqrt(1+table_norm_2*INV(table_norm`*table_norm)*table_norm_2`) ;
residus_recursifs_prov=residus/denom;
CREATE residus_recursifs_prov FROM residus_recursifs_prov ;
APPEND from residus_recursifs_prov ;
QUIT ;

DATA residuals;
SET residuals residus_recursifs_prov;
RUN;


%MEND;

%macro test_cusum_2;
DATA residus;
SET fit ;
KEEP yresid;
IF yresid=. THEN DELETE;
RUN;

PROC SQL ;
select count(*) into :nb_lignes from table;
QUIT;

PROC IML ;
 RESET PRINT;
 USE residus ;
 READ ALL INTO residus ;
 r=residus`;
S=r*residus ;
sigma=sqrt(S/(&nb_lignes-&b-1-&t-1));
CREATE sigma FROM sigma ;
APPEND from sigma ;
QUIT ;

PROC SQL ;
select distinct max(col1) into :sigma from sigma;
QUIT;

DATA residuals;
SET residuals ;
RENAME COL1=residus;
sigma=&sigma;
RUN;

DATA residuals;
SET residuals ;
residus=residus/sigma;
RUN;

DATA residuals;
SET residuals ;
residus_rec+residus;
RUN;
%mend;


%macro module(a,var,taux,for);
/*macro qui prépare la variable choisie à la regression midas*/
/*a : nombre de retards de la variable haute fréquence retenus*/
/*freq : fréquence de la variable haute fréquence (3 pour une variable mensuelle, 63 pour une variable journalière*/
/*var : nom de la variable choisie. Elle eput être haute fréquence (journalière) ou moyenne fréquence (mensuelle). il suffit juste de le préciser via le paramètre freq.
/*for : nombre de mois séparant la fin de la période d'estimation de la fin du trimestre.
for = 1 signifie qu'on prévoit le mois 3 à la fin du mois 2.
/*si for = 2 on se situe à la fin du mois 1 pour prévoir le mois 3*/

/*Cette macro est utilisée dans le cadre d'un modèle polynomial, comme dans le cadre d'un modèle exponentiel*/

/*J'extrais la variable qui m'intéresse*/
DATA &var ;
SET donnees ;
KEEP date &var ;
RUN;

/*Je nettoie la base de données*/
DATA &var ;
SET &var ;
IF &var=. THEN DELETE;
RUN;

/*Je calcule un taux de croissance si demandé*/
%IF &taux=1 %THEN %DO ;
DATA &var;
SET &var ;
prov=dif(&var);
RUN;

DATA &var;
SET &var;
DROP &var;
RENAME prov=&var;
RUN;
%END;

/*traitement de la base de données en vue du MIDAS*/
%base_reg(&var,&a,&for)



/*Je rassemble la base de données que je viens de créer avec la base contenant le regresseur, en vue de la regression*/
DATA table ;
MERGE table &var.freq;
BY date;
RUN;

/*je conserve une copie de la table, qui sera utile lors du calcul des coefficients associés à chaque retard*/
DATA bibli.table_2 ;
SET table;
RUN;
%mend;




%macro calcul_coefficients_polynomial(var,t,a,graph);

/*macro qui calcule la courbe des coefficients d'un modèle MIDAS contraint par un polynôme de degré t*/


/*var : variable qui subit la contrainte
/*t : degré du polynôme de contraintes*/
/*a : nombre de jours de retards*/

/*les ocefficients estimés sont conservés dans la table parametres*/
/*js'isolèe les valeurs qui m'intéresssent dans la table parametres*/
DATA parametres_2 ;
SET parametres;
KEEP &var.1-&var.%EVAL(&t+1);
RUN ;


%transpose(parametres_2);

/*je multiplie par la matrice du polynôme almon*/
%put produit ;
%produit_matriciel(matrice,parametres_2);

%transpose(produit);
%put renommer les colonnes ;

DATA produit ;
SET produit ;
%DO i=1 %TO &a;
RENAME col&i=&var&i;
%END;
RUN;


DATA coefficients_hf&var;
SET produit;
RUN;


%put graphique;
%IF &graph=1 %THEN %DO ;
%transpose(coefficients_hf&var);

DATA coefficients_hf&var;
SET coefficients_hf&var;
num=_n_;
RUN;

/*exportation du graphique*/
ODS RTF FILE="&destination\&var&t.parametres_horizon&for&a.retards.rtf";

TITLE "Coefficients almon polynomiaux, &t parametres, horizon &for, &var avec &a retards";
PROC GPLOT data=coefficients_hf&var ;
PLOT col1*num;
SYMBOL interpol=spline;
RUN;
ODS RTF CLOSE ;


%END;


%mend;



%macro ajout_polynomial(a,t,var,for);
/*Macro qui remplace les colonnes correspondants aux différents jours du regresseur hite fréquence par leur produit avec la matricedu polynôme almon*/
/*a : nombre de retards de la variable haute fréquence retenus*/
/*freq : fréquence de la variable haute fréquence (3 pour une variable mensuelle, 63 pour une variable journalière*/
/*t : degré du polynôme  almon choisi*/
/*var : nom de la variable choisie. Elle eput être haute fréquence (journalière) ou moyenne fréquence (mensuelle). il suffit juste de le préciser via le paramètre freq.
/*for : nombre de mois séparant la fin de la période d'estimation de la fin du trimestre.
for = 1 signifie qu'on prévoit le mois 3 à la fin du mois 2.

/*j'isole les colonnes de la base &var.freq qui m'intéressent, ie celles avec les valeurs de la variable*/
DATA A ;
SET &var.freq;
DROP date_obs date ;
RUN;

DATA A ;
SET  A ;
KEEP &var.1-&var.&a;
RUN;



/*je calcule la matrice du polynôme almon, dont le nombre de lignes dépend de l'horizon de prévision */
%mat(&a,&t);
%PUT produit;
%produit_matriciel(A,matrice);



/*boucle pour renommer les colonnes de la table produit (sans ça elles s'appelleraient col1-colt*/
%PUT renomme les colonnes ajout polynomial;
DATA produit ;
SET produit;
%DO i=1 %TO %EVAL(&t+1);
RENAME col&i=&var.&i;
%END;
RUN;


%PUT fusion produit dates;
/*Je fusionne le produit avec les dates de la table &var.freq*/
DATA &var.freq_2 ;
SET &var.freq;
KEEP date date_obs;
RUN;

DATA &var.freq_2 ;
MERGE &var.freq_2 produit ;
RUN;

/*Ju fusionne maintenant &var.freq avec la base table purgée de ses colonnes &var1-&var&a.*/
%PUT fusion table var.freq;
DATA table;
SET table;
DROP &var.1-&var.&a;
RUN;

DATA table ;
MERGE table &var.freq_2;
BY date;
RUN;

/*je "sauvegarde" un copie de cette table dans la bibliothèque bibli. Cette copie sera nécessaire lors de la boucle RMSFE*/
DATA bibli.table;
SET table;
RUN;

%mend;









%macro prevision_polynomial(var_1,a,t,var_2,b,for,annee,trimestre);
/*macro qui calcule la valeur prévue du PIB à partir de l'estimation d'un modèle MIDAS polynomial polynomial de degré "t" pour var_1 non contraint pour var_2*/

/*var_1 : nom de la variable haute fréquence*/
/*a : nombre de retards de la variable haute fréquence retenus*/
/*t : degré du polynnôme de contraintes pour la variable haute fréquence
/*taux_1 : s'il faut calculer les différences premières pour var_1 mettre 1 ; 0 sinon*/
/*var_2 : nom de la variable moyenne fréquence*/
/*b : nombre de retards de la variable moyenne fréquence retenus*/
/*taux_2 : s'il faut calculer les différences premières pour var_2 mettre 1 ; 0 sinon*/
/*for : nombre de mois séparant la fin de la période d'estimation de la fin du trimestre.
for = 1 signifie qu'on prévoit le mois 3 à la fin du mois 2.
/*annee : année de la dernière valeur d'estimation souhaitée*/

/*je rassemble dans une même table les coefficients estimés et ceux reconstitués. */

/*de la table parametres fournie par la proc reg, je ne garde que les estimations correspondant à la variable mensuelle*/

DATA coefficients;
SET parametres;
DROP _MODEL_ _DEPVAR_ _TYPE_ _RMSE_ taux &var_1.1-&var_1.%EVAL(&t+1) ;
RUN;

/*je rassemble tous les coefficients dans la table coefficients*/
DATA coefficients;
MERGE coefficients coefficients_hf&var_1 ;
RUN;


/*j'isole maintenant la valeur des regresseurs correposndant à la date immédiatement successive à celle de la fin de lapériode d'estimation*/
/*J'isole aussi la date de prévision, pour ensuite l'accoler à la valeur prévue*/
/*Si on est au trimestre 1,2,3, il suffit de prendre la valeur correspondant au trimestre suivant*/
%IF &trimestre<4 %THEN %DO ;
DATA valeurs;
SET bibli.table_2;
DROP date taux date_obs;
WHERE date=yyq(&annee,%EVAL(&trimestre+1));
RUN;

/*j'extrais ici la date correspondant au trimestre étudié en ce moment*/
DATA date ;
SET bibli.table ;
KEEP date ;
WHERE date=yyq(&annee,%EVAL(&trimestre+1));
RUN ;
%END;

/*si on est au trimestre 4, il faut prendre la valeur du premier trimestre de l'année suivante*/
%IF &trimestre=4 %THEN %DO ;
DATA valeurs;
SET bibli.table_2;
DROP date taux date_obs ;
WHERE date=yyq(%EVAL(&annee+1),1);
RUN;

/*j'extrais ici la date correspondant au trimestre étudié en ce moment*/
DATA date ;
SET bibli.table ;
KEEP date ;
WHERE date=yyq(%EVAL(&annee+1),1);
RUN ;
%END;

/*je retire la valeur correspondant au premier retard du pib*/

DATA valeurs ;
SET valeurs;
DROP ret1;
RUN;

%transpose(valeurs);

%produit_matriciel(coefficients,valeurs);

/*le résultat de ce produit matriciel se trouve dans une table nommée produit (cf macro produit_matriciel)*/

/*j'exporte la prévision dans la table prévision_prov*/
DATA prevision_prov;
SET produit ;
RUN ;

/*j'ajoute la date à prevision_prov*/
DATA prevision_prov ;
MERGE prevision_prov date;
RUN;
%mend;


%macro almon_polynomial(var_1,a,t,taux_1,var_2,b,taux_2,for,annee,trim);
/*macro qui estime un modèle MIDAS avec deux variable : l'une sans contrainte (var_2) et l'autre avec une contrainte polynomiale (var_1)
/*var_1 : nom de la variable haute fréquence*/
/*a : nombre de retards de la variable haute fréquence retenus*/
/*t : degré du polynnôme de contraintes
/*taux_1 : s'il faut calculer les différences premières pour var_1 mettre 1 ; 0 sinon*/
/*var_2 : nom de la variable moyenne fréquence*/
/*b : nombre de retards de la variable moyenne fréquence retenus*/
/*taux_2 : s'il faut calculer les différences premières pour var_2 mettre 1 ; 0 sinon*/
/*for : horizon de prévision : si for =1 on se situe à la fin du mois 2 pour prévoir le mois3. Si for =2, on se situe à la fin du mois 1*/
/*annee : année de la dernière valeur d'estimation souhaitée*/
/*trim : trimestre de la dernière valeur d'estimation souhaitée*/
%chargeur_1

/*préparation des données moyenne fréquence et ajout de celles-ci à la table*/
%PUT module mf ;
%module(&b,&var_2,&taux_2,&for);

/*préparation des données haute fréquence et ajout de celles-ci à la table*/
%PUT module hf ;
%module(&a,&var_1,&taux_1,&for);


/*modification des données haute fréquence de la table du fait de la forme polynopmiale des coefficients*/
%PUT ajout hf ;
%ajout_polynomial(&a,&t,&var_1,&for)




/*Elimination des lignes correspondant à une date posétieure à celle choisie*/
%PUT dates table ;
DATA table;
SET table;
WHERE date<=yyq(2012,2);
RUN;


/*regression*/
%PUT regression  ;
/*Si adl vaut 0 cela signifie qu'un retard du PIB n'est pas bienvenu*/

PROC REG DATA=table OUTEST=parametres ;
MODEL taux= &var_1.1-&var_1.%EVAL(&t+1) &var_2.1-&var_2.&b  ;
OUTPUT out=fit
  p=yhat
	r=yresid;
RUN;
QUIT;




%calcul_coefficients_polynomial(&var_1,&t,&a,1)
 

%mend;


%macro rmsfe_umidas_polynomial(var_1,a,t,taux_1,var_2,b,taux_2,for,cusum);
/*macro qui calcule le RMSFE d'un modèle MIDAS à deux variables, l'une non contrainte (var_2), et l'autre contrainte par une polynôme (var_1)
/*var_1 : nom de la variable haute fréquence*/
/*a : nombre de retards de la variable haute fréquence retenus*/
/*t : degré du polynnôme de contraintes
/*taux_1 : s'il faut calculer les différences premières pour var_1 mettre 1 ; 0 sinon*/
/*var_2 : nom de la variable moyenne fréquence*/
/*b : nombre de retards de la variable moyenne fréquence retenus*/
/*taux_2 : s'il faut calculer les différences premières pour var_2 mettre 1 ; 0 sinon*/
/*for : horizon de prévision : si for =1 on se situe à la fin du mois 2 pour prévoir le mois3. Si for =2, on se situe à la fin du mois 1*/
/*annee : année de la dernière valeur d'estimation souhaitée*/
/*trim : trimestre de la dernière valeur d'estimation souhaitée*/
/*cusum : pour calculer le test cusum, mettre 1. 0 sinon*/


/*création d'un masque de base */
DATA res.prevision;
    DELETE ;
run;

/*chargement des données*/
%chargeur_1

/*creation d'un masque de base destinée à contenir les résidus, en vue du calcul du test cusum*/
DATA residus;
DELETE ;
RUN;


/*préparation de la variable moyenne fréquence en vu e de la régression MIDAS*/
%PUT module mf ;
%module(&b,&var_2,&taux_2,&for);

/*préparation de la variable haute fréquence en vue de la régression MIDAS*/
%PUT module hf ;
%module(&a,&var_1,&taux_1,&for);

%PUT ajout hf ;
%ajout_polynomial(&a,&t,&var_1,&for)

/*lancement de la boucle qui estime autant de midas qu'il y a de trimestres entre 2000 et 2012*/
%DO annee=2000 %TO 2012;
%DO trimestre=1 %TO 4;

%PUT dates table ;
DATA table;
SET bibli.table;
WHERE date<=yyq(&annee,&trimestre);
RUN;

%PUT regression  ;
PROC REG DATA=table OUTEST=parametres ;
MODEL taux=&var_1.1-&var_1.%EVAL(&t+1) &var_2.1-&var_2.&b  ;
OUTPUT out=fit
	p=yhat ;
RUN;
QUIT;




/*calcul des coefficients*/
%calcul_coefficients_polynomial(&var_1,&t,&a,0);

/*calcul de la prevision*/
%prevision_polynomial(&var_1,&a,&t,&var_2,&b,&for,&annee,&trimestre);

/*je range chaque prévision dans la base res.prevision*/
DATA res.prevision ;
SET res.prevision prevision_prov;
RUN;

%IF &cusum=1 %THEN %DO ;
%test_cusum;
%END;

/*petite ligne pour savoir où on en est dans la log*/
%PUT itération &annee Q &trimestre/4 &var_1;

%END;
%END;

/*nettoyage de la table res.prevision*/
DATA res.prevision ;
SET res.prevision ;
KEEP col1 date ;
IF col1=. THEN DELETE ;
RUN;

/*graphe de la prevision vs realité*/
/*choix du titre et du nom du fichier où le graphe sera stocké correspondant au modèle*/
%LET nom=polynomial&var_1.&a.jours&t. ;
%LET titre="Réalité vs prevision au mois 1, Midas polynomial de degré &t., &var_1 sur &a jours";

%grapheur


%mend;



%macro grapheur;
 DATA graph_1 ;
 SET table ;
 KEEP date taux;
 RUN;
 
 DATA graph_3 ;
 SET res.prevision ;
 KEEP date COL1;
 RUN;

 DATA graph;
 MERGE graph_1 graph_3;
 BY date ;
 RUN;


 DATA graph;
 SET graph ;
 IF col1=. THEN DELETE;
 RUN;


DATA graph ;
SET graph ;
diff=(col1-taux)*(col1-taux);
RUN;

PROC SQL ;
select distinct sqrt(mean(diff)) into :RMSFE from graph ;
QUIT ;
%PUT le RMSFE vaut &RMSFE;

goptions reset=all;
goptions device=jpeg ;



DATA selection ;
RMSFE=&RMSFE;
RUN;

ODS RTF FILE="&destination\&nom.rmsfe.rtf";
TITLE &titre;
TITLE2 "RMSFE=&RMSFE";
PROC GPLOT data=graph ;
PLOT (col1 taux)*date /overlay ;
SYMBOL interpol=spline;
RUN;
ODS RTF CLOSE ;





%MEND;



%macro almon_exp(var_1,a,t,taux_1,var_2,b,taux_2,for,annee,trim);
/*macro qui estime un modèle MIDAS avec deux variable : l'une sans contrainte (var_2) et l'autre avec une contrainte exponentielle (var_1)
/*var_1 : nom de la variable haute fréquence*/
/*a : nombre de retards de la variable haute fréquence retenus*/
/*t : degré du polynnôme incorporé dans l'exponentielle
/*taux_1 : s'il faut calculer les différences premières pour var_1 mettre 1 ; 0 sinon*/
/*var_2 : nom de la variable moyenne fréquence*/
/*b : nombre de retards de la variable moyenne fréquence retenus (en mois)*/
/*taux_2 : s'il faut calculer les différences premières pour var_2 mettre 1 ; 0 sinon*/
/*for : horizon de prévision : si for =1 on se situe à la fin du mois 2 pour prévoir le mois3. Si for =2, on se situe à la fin du mois 1*/
/*annee : année de la dernière valeur d'estimation souhaitée*/
/*trim : trimestre de la dernière valeur d'estimation souhaitée*/


/*Je charge les donnees*/
%chargeur_1

/*préparation des données haute fréquence et ajout de celles-ci à la table*/
%PUT module hf ;
%module(&a,&var_1,&taux_1,&for);

/*préparation des données moyenne fréquence et ajout de celles-ci à la table*/
%PUT module mf ;
%module(&b,&var_2,&taux_2,&for);

/*Elimination des lignes correspondant à une date posétieure à celle choisie*/
%PUT dates table ;
DATA table;
SET table;
WHERE date<yyq(&annee,&trim);
RUN;


/*estimation du modèle de regression*/
%regression_exp(&var_1,&a,&t,&var_2,&b);

/*reconstitution des coefficients correspondant à chaque jour de retard*/
%calcul_coefficients_exponentiel(&var_1,&a,&t,1)


%mend;

%macro regression_exp(var_1,a,t,var_2,b);
/*macro qui estime un modèle de regression MIDAS exponentiel pour var_1 et non contraint pour var_2*/
/*var_1 : nom de la varibale haute fréquenc equi sera contrainte exponentiellement*/
/*a : nombre de joruis de retard de var_1*/
/*t : degré du polynôme de contraintes incorporé dans l'exponentielle*/
/*var_2 : nom de la variable moyenne fréquence*/
/*b : nombre de retards de la variable moyenne fréquence retenus(en mois)*/

/*je supprime les ligne avec des valeurs manquantes, sinon la pronc nlin ne comprend pas */
DATA table ;
SET table;
IF &var_1.1=. THEN DELETE;
IF taux=. THEN DELETE;
RUN ;



PROC NLIN data=table OUTEST=parametres method=newton maxiter=500; 

/*je propose une valeur initiale pour les parametres à estimer*/
parameters 
/*la constante*/
c=0.01 
/*le facteur devant le bloc exponentile*/
beta&var_1=0

/*les coefficients à l'intérieur de l'exponentielle*/
%DO k=1 %TO &t ;
theta&k&var_1=0
%END;

/*les coefficients correspondant aux b retards de var_2*/
	%DO k=1 %TO &b;
		um&k = 0.0001 
	%END;

;

MODEL taux = c 
/*première boucle correspondant à la variable mensuelle*/
	%DO i=1 %TO &b;
	+ um&i*&var_2&i 
	%END;
 /*Seconde boucle correspondant à la variable hf*/

+ beta&var_1/(0 %do i=1 %to &a; 		
		+ exp(0 %DO k=1 %TO &t ;+ theta&k&var_1*&i**&k %END;) 
%end;)*
(%do i=1 %to &a; 		
		+ (exp(0 %DO k=1 %TO &t ;+ theta&k&var_1*&i**&k %END;)*&var_1.&i ) 
	%end;)
	;
	OUTPUT OUT=sortie_nlin
	R=residus ;
RUN;
%mend;




%macro calcul_coefficients_exponentiel(var,a,t,graph);
/*macro qui calcule la courbe des coefficints d'un modèle MIDAS avec une contrainte exponentielle sur la variable "var"

var : nom de la variable qui subit la contrainte exponentielle
a : nombre de retards de la variable a pris en compte
t : degré du polynôme situé à l'intérieur de l'exponentielle*/


/*les coefficients estimés sont conservés dans la table parametres*/
/*js'isolèe les valeurs qui m'intéresssent dans la table parametres*/

PROC SQL ;
select distinct max(_ITER_) into :ligne_max from parametres;
QUIT;

%PUT &ligne_max;

DATA parametres_2 ;
SET parametres ;
KEEP %DO i=1 %TO &t; theta&i&var %END ; ;
WHERE _ITER_=&ligne_max;
RUN ;

%transpose(parametres_2);

/*je multiplie par la matrice du polynôme almon*/


%mat(%EVAL(&a+1),&t)	;
DATA matrice ;
SET matrice (firstobs=2);
DROP col0;
RUN;


%produit_matriciel(matrice,parametres_2);

DATA produit ;
SET produit ;
coeffs=exp(col1);
RUN;

DATA produit;
SET produit;
DROP col1;
RUN;


/*quelques lignes pour calculer la somme des coefficients*/
PROC SQL ;
select distinct sum(coeffs) into :somme from produit;
QUIT;



/*quelques lignes pour multiplier les ocefficients calculés par beta*/
DATA beta ;
SET parametres;
KEEP beta&var;
WHERE _ITER_=&ligne_max;
RUN ;

PROC SQL ;
select distinct beta&var into :beta from beta;
QUIT;

/*quelques lignes pour multiplier et diviser les coefficients par beta et la somme des coefficients*/
DATA produit ;
SET produit ;
beta=&beta ;
somme=&somme ;
RUN;


DATA produit ;
SET produit ;
coeffs2=beta*coeffs/somme ;
RUN;

DATA produit;
SET produit;
DROP coeffs beta somme;
RUN;

DATA produit;
SET produit;
RENAME coeffs2=coeffs;
RUN;




%transpose(produit);


DATA produit ;
SET produit ;
%DO i=1 %TO &a;
RENAME col&i=&var&i;
%END;
RUN;


DATA coefficients_hf;
SET produit;
RUN;

DATA coefficients_hf&var;
SET coefficients_hf;
RUN;

%IF &graph=1 %THEN %DO ;
%transpose(coefficients_hf&var);

DATA coefficients_hf&var;
SET coefficients_hf&var;
num=_n_;
RUN;


/*exportation de la courbe des coefficients*/

ODS RTF FILE="&destination\coefficients&t&b&var._almon_exp.rtf";
TITLE "Coefficients almon exponentiel, horizon &var avec &a retards";
PROC GPLOT data=coefficients_hf&var ;
PLOT col1*num;
SYMBOL interpol=spline;
RUN;
ODS RTF CLOSE ;
%END;


%mend;









%macro prevision_exponentiel(var_1,a,t,var_2,for,annee,trimestre);
/*macro qui calcule la valeur prévue du PIB à partir de l'estimation d'un modèle MIDAS exponentiel de degré "t" pour var_1, non contraint pour var_2*/

/*var_1 : nom de la variable haute fréquence (contrainte)*/
/*a : nombre de retards de la variable haute fréquence retenus*/
/*t : degré du polynnôme incorporé dans l'exponentielle correspondant à var_1
/*taux_1 : s'il faut calculer les différences premières pour var_1 mettre 1 ; 0 sinon*/
/*var_2 : nom de la variable moyenne fréquence (non contrainte)*/
/*b : nombre de retards de la variable moyenne fréquence retenus*/
/*taux_2 : s'il faut calculer les différences premières pour var_2 mettre 1 ; 0 sinon*/
/*for : horizon de prévision : si for =1 on se situe à la fin du mois 2 pour prévoir le mois3. Si for =2, on se situe à la fin du mois 1*/
/*annee : année de la dernière valeur d'estimation souhaitée*/





/*je récupère les coefficients des variables mensuelles*/

PROC SQL ;
select distinct max(_ITER_) into :ligne_max from parametres;
QUIT;

%PUT &ligne_max;
%PUT extraction des coefficients mensuels;
/*de la table parametres fournie par la proc reg, je ne garde que les estimations correspondant aux variables mensuelles*/
DATA coefficients;
SET parametres;
DROP _TYPE_ _STATUS_ _NAME_ _ITER_ _SSE_ c beta&var_1 %DO i=1 %TO &t; theta&i&var_1 %END; ;
WHERE _iter_ =&ligne_max ;
RUN;


%PUT isolation de la constante;
/*j'isole la constante*/
DATA constante;
SET parametres;
KEEP c ;
WHERE _iter_ =&ligne_max ;
RUN;



DATA coefficients_hf&var_1;
SET coefficients_hf&var_1;
DROP num;
RUN;





/*je rassemble tous les coefficients dans la table coefficients
Cette table comportera, dans l'ordre : la cosntante, les coefficients reconstitués correspondant à la première variable finanière
puis ceux de la seconde, puis les coefficients des variables mensuelles*/


DATA coefficients;
MERGE  coefficients coefficients_hf&var_1  ;
RUN;

DATA coefficients;
MERGE constante coefficients  ;
RUN;


/*j'isole maintenant la valeur des regresseurs correposndant à la date immédiatement successive à celle de la fin de lapériode d'estimation*/
/*J'isole aussi la date de prévision, pour ensuite l'accoler à la valeur prévue*/
/*Si on est au trimestre 1,2,3, il suffit de prendre la valeur correspondant au trimestre suivant*/
%IF &trimestre<4 %THEN %DO ;
DATA valeurs;
SET bibli.table_2;
DROP date taux date_obs;
WHERE date=yyq(&annee,%EVAL(&trimestre+1));
RUN;

DATA date ;
SET bibli.table ;
KEEP date ;
WHERE date=yyq(&annee,%EVAL(&trimestre+1));
RUN ;
%END;

/*si on est au trimestre 4, il faut prendre la valeur du premier trimestre de l'année suivante*/
%IF &trimestre=4 %THEN %DO ;
DATA valeurs;
SET bibli.table_2;
DROP date taux date_obs ;
WHERE date=yyq(%EVAL(&annee+1),1);
RUN;

DATA date ;
SET bibli.table ;
KEEP date ;
WHERE date=yyq(%EVAL(&annee+1),1);
RUN ;
%END;


/*je retire la valeur correspondant au premier retard du pib*/
DATA valeurs ;
SET valeurs;
DROP ret1;
RUN;




%transpose(valeurs);
%PUT produit matriciel;
%produit_matriciel(coefficients,valeurs);

/*le résultat de ce produit matriciel se trouve dans une table nommée produit (cf macro produit_matriciel)*/

/*j'exporte la prévision dans la table prévision_prov*/
DATA prevision_prov;
SET produit ;
RUN ;


/*j'ajoute la date à prevision_prov*/
DATA prevision_prov ;
MERGE prevision_prov date;
RUN;
%mend;







%macro rmsfe_almon_exp(var_1,a,t,taux_1,var_2,b,taux_2,for,annee,trim);

/*macro qui calcule le RMSFE d'un modèle MIDAS à deux variables, l'une non contrainte (var_2), et l'autre contrainte par une exponentielle (var_1)
/*var_1 : nom de la variable haute fréquence (contrainte)*/
/*a : nombre de retards de la variable haute fréquence retenus*/
/*t : degré du polynnôme de contraintes incorporé dans l'exponentielle
/*taux_1 : s'il faut calculer les différences premières pour var_1 mettre 1 ; 0 sinon*/
/*var_2 : nom de la variable moyenne fréquence*/
/*b : nombre de retards de la variable moyenne fréquence retenus*/
/*taux_2 : s'il faut calculer les différences premières pour var_2 mettre 1 ; 0 sinon*/
/*for : nombre de mois séparant la fin de la période d'estimation de la fin du trimestre.
for = 1 signifie qu'on prévoit le mois 3 à la fin du mois 2.
/*annee : année de la dernière valeur d'estimation souhaitée*/
/*trim : trimestre de la dernière valeur d'estimation souhaitée*/


DATA res.prevision;
    DELETE ;
run;



%chargeur_1


%PUT module mf ;
%module(&b,&var_2,&taux_2,&for);


%PUT module hf ;
%module(&a,&var_1,&taux_1,&for);


/*ajout à la table d'un certain nombre de colonnes spécifiques à la forme exponentielle des coefficients*/

%DO annee=2000 %TO 2012;
%DO trimestre=1 %TO 4;

%PUT dates table ;
DATA table;
SET bibli.table_2;
WHERE date<=yyq(&annee,&trimestre);
RUN;

DATA table ;
SET table;
IF &var_1&1=. THEN DELETE ;
RUN;

%PUT regression  ;
%regression_exp(&var_1,&a,&t,&var_2,&b);

%PUT calcul coefficients  ;
%calcul_coefficients_exponentiel(&var_1,&a,&t,0)

%PUT calcul prevision  ;
%prevision_exponentiel(&var_1,&a,&t,&var_2,&for,&annee,&trimestre);

DATA res.prevision ;
SET res.prevision prevision_prov;
RUN;





%PUT itération &annee Q &trimestre &var_1 &a;
%END ;
%END;

%LET nom=exponentiel&var_1.&b. ;

%LET titre="Réalité vs prevision au mois 1, Midas exponentiel, &var_1";

%grapheur ;

%PUT le RMSFE vaut &RMSFE;



%mend;







%macro bic_polynomial(var_1,a,t,taux_1,var_2,b,taux_2,for,adl,annee,trim);

/*macro qui calcule le BIC et l'AIC de tous les modèles MIDAs à deux variable dont l'une (var_1) est contrainte par un polynôme et l'autre non
/*var_1 : nom de la variable haute fréquence (contrainte)*/
/*a : nombre de retards maximum de la variable haute fréquence retenus*/
/*t : degré du polynnôme de contraintes incorporé dans l'exponentielle
/*taux_1 : s'il faut calculer les différences premières pour var_1 mettre 1 ; 0 sinon*/
/*var_2 : nom de la variable moyenne fréquence*/
/*b : nombre de retards de la variable moyenne fréquence retenus*/
/*taux_2 : s'il faut calculer les différences premières pour var_2 mettre 1 ; 0 sinon*/
/*for : nombre de mois séparant la fin de la période d'estimation de la fin du trimestre.
for = 1 signifie qu'on prévoit le mois 3 à la fin du mois 2.
/*annee : année de la dernière valeur d'estimation souhaitée*/
/*trim : trimestre de la dernière valeur d'estimation souhaitée*/
%chargeur_1


%DO horizon=2 %TO &for ;

/*préparation des données moyenne fréquence et ajout de celles-ci à la table*/
%PUT module mf ;
%module(&b,&var_2,&taux_2,&for);

/*préparation des données haute fréquence et ajout de celles-ci à la table*/
%PUT module hf ;
%module(&a,&var_1,&taux_1,&for);



/*je fais varier le nombre de jours de retards :
la macro calculera l'aic et le bic pour tous les modèles ayant entre 70 et a retards*/
%DO jours=70 %TO &a ;


/*je fais varier le degré du polynôme de contraintes
la macro calculera l'aic et le bic pour tous les modèles contraint par des molynôme de degré 2 jusqu'à t*/
%DO parametres=2 %TO &t ;


DATA table ;
SET bibli.table_2;
RUN;

/*modification des données haute fréquence de la table du fait de la forme polynomiale des coefficients*/
%PUT ajout hf ;
%ajout_polynomial(&jours,&parametres,&var_1,&horizon)


/*je fais varier le nombre de retards de la variable non contrainte
la macro calculera l'aic et le bic pour tous les modèles ayant entre 5 et b mois de retards*/
%DO mois=5 %TO &b ;



/*Elimination des lignes correspondant à une date posétieure à celle choisie*/
%PUT dates table ;
DATA table;
SET table;
WHERE date<=yyq(2012,2);
RUN;


/*regression*/
%PUT regression  ;
/*Si adl vaut 0 cela signifie qu'un retard du PIB n'est pas bienvenu*/
%IF &adl=0 %THEN %DO ;
PROC REG DATA=table OUTEST=resultats ;
MODEL taux= &var_1.1-&var_1.%EVAL(&parametres+1) &var_2.1-&var_2.&mois / AIC BIC ;
OUTPUT out=fit
	p=yhat ;
RUN;
QUIT;
%END ;

/*Si adl vaut autre chose que 0 (1) cela signifie qu'un retard du PIB est demandé dans l'estimation du modèle*/
%ELSE %DO ;
PROC REG DATA=table OUTEST=resultats ;
MODEL taux=ret1 &var_1.1-&var_1.%EVAL(&parametres+1) &var_2.1-&var_2.&mois / AIC BIC ;
OUTPUT out=fit
	p=yhat ;
RUN;
QUIT;
%END ;




DATA resultats ;
SET resultats ;
jours=&jours ;
mois=&mois;
parametres=&parametres;
horizon=&horizon;
RUN;


DATA res.resultats&var_1 ;
SET res.resultats&var_1 resultats ;
RUN;

%PUT iteration &var_1 &jours/&a &parametres/&t &mois/&b ;

%END ;
%END;
%END;
%END;
 



PROC EXPORT data=res.resultats&var_1
   outfile='destination\&var_1.bic.csv'
   dbms=csv
 	replace;
 RUN;


%mend;
